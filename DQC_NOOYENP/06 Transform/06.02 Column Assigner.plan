<?xml version='1.0' encoding='UTF-8'?>
<purity-config xmlns:comm="http://www.ataccama.com/purity/comment" version="10.6.2.ga-2017-03-03">
	<references/>
	<component-mappings>
		<propertyMappings/>
	</component-mappings>

<!-- (Column Assigner) --><step id="Column Assigner" className="com.ataccama.dqc.tasks.expressions.ColumnAssigner" disabled="false" mode="NORMAL">
		<properties>
			<assignments>
				<assignment expression="src_city" column="pur_city">
					<scorer>
						<scoringEntries>
							<scoringEntry score="0" explainAs="CA_CHANGED" explain="false" key="CA_CHANGED"/>
						</scoringEntries>
					</scorer>
					<comm:comment>initial assigment</comm:comment>
				</assignment>
				<assignment expression="capitalizeWithException(pur_city,&quot;s&quot;,&quot;d&quot;, &quot;de&quot;, &quot;le&quot;,&quot;l&quot;,&quot;la&quot;,&quot;sur&quot;)" column="pur_city">
					<scorer explanationColumn="exp">
						<scoringEntries>
							<scoringEntry score="0" explainAs="CITY_CAPITALIZED" explain="true" key="CA_CHANGED"/>
						</scoringEntries>
					</scorer>
					<comm:comment>In this case we use scoring. We use capitalizeWithException to solve the problem of correct capitalization of Saint-Basile-le-Grand.</comm:comment>
				</assignment>
				<assignment expression="doubleMetaphone(pur_city)" column="pur_city_dblmetaphone">
					<scorer>
						<scoringEntries>
							<scoringEntry score="0" explainAs="CA_CHANGED" explain="false" key="CA_CHANGED"/>
						</scoringEntries>
					</scorer>
				</assignment>
				<assignment expression="toString(sequence())" column="id">
					<scorer>
						<scoringEntries/>
					</scorer>
				</assignment>
			</assignments>
		</properties>
		<visual-constraints bounds="48,192,-1,-1" layout="vertical"/>
	</step>
	<connection className="com.ataccama.dqc.model.elements.connections.StandardFlowConnection" disabled="false">
		<source step="Column Assigner" endpoint="out"/>
		<target step="Results - CA" endpoint="in"/>
		<visual-constraints>
			<bendpoints/>
		</visual-constraints>
	</connection>



<!-- (Results - CA) --><step id="Results - CA" className="com.ataccama.dqc.tasks.io.text.write.TextFileWriter" disabled="false" mode="NORMAL">
		<properties useStringQualifierOnAllColumns="false" stringQualifier="&quot;" lineSeparator="\r\n" fieldSeparator=";" generateMetadata="true" fileName="../data/out/06.02 Column_Assigner.csv" encoding="UTF-8" writeHeader="true" writeAllColumns="false" compression="NONE" stringQualifierEscape="&quot;">
			<columns>
				<textWriterColumn name="src_city"/>
				<textWriterColumn name="pur_city"/>
				<textWriterColumn name="exp"/>
				<textWriterColumn name="pur_city_dblmetaphone"/>
			</columns>
			<dataFormatParameters trueValue="true" falseValue="false" thousandsSeparator="" dateFormatLocale="en_US" dateTimeFormat="yyyy-MM-dd HH:mm:ss" decimalSeparator="." dayFormat="yyyy-MM-dd"/>
		</properties>
		<visual-constraints bounds="48,264,-1,-1" layout="vertical"/>
	</step>



<!-- (addresses) --><step id="addresses" className="com.ataccama.dqc.tasks.io.text.read.TextFileReader" disabled="false" mode="NORMAL">
		<properties stringQualifier="&quot;" lineSeparator="\r\n" fieldSeparator=";" lineMaxReadLength="65536" numberOfLinesInHeader="1" fileName="../data/in/addresses.csv" encoding="UTF-8" numberOfLinesInFooter="0" compression="NONE" stringQualifierEscape="&quot;">
			<columns>
				<textReaderColumn name="src_street" type="STRING" ignore="false"/>
				<textReaderColumn name="src_city" type="STRING" ignore="false"/>
				<textReaderColumn name="src_province" type="STRING" ignore="false"/>
				<textReaderColumn name="src_zip" type="STRING" ignore="false"/>
			</columns>
			<dataFormatParameters trueValue="true" falseValue="false" thousandsSeparator="" dateFormatLocale="en_US" dateTimeFormat="yy-MM-dd HH:mm:ss" decimalSeparator="." dayFormat="yy-MM-dd"/>
			<errorHandlingStrategy rejectFileName="rejected.txt">
				<errorInstructions>
					<errorInstruction putToLog="true" errorType="EXTRA_DATA" dataStrategy="READ_POSSIBLE" putToReject="false"/>
					<errorInstruction putToLog="true" errorType="LONG_LINE" dataStrategy="STOP" putToReject="true"/>
					<errorInstruction putToLog="true" errorType="PROCESSING_ERROR" dataStrategy="STOP" putToReject="false"/>
					<errorInstruction putToLog="true" errorType="INVALID_DATE" dataStrategy="READ_POSSIBLE" putToReject="false"/>
					<errorInstruction putToLog="true" errorType="SHORT_LINE" dataStrategy="READ_POSSIBLE" putToReject="true"/>
					<errorInstruction putToLog="true" errorType="UNPARSABLE_FIELD" dataStrategy="NULL_VALUE" putToReject="false"/>
				</errorInstructions>
			</errorHandlingStrategy>
			<shadowColumns>
				<shadowColumnDef name="exp" type="STRING"/>
				<shadowColumnDef name="pur_city" type="STRING"/>
				<shadowColumnDef name="pur_city_dblmetaphone" type="STRING"/>
				<shadowColumnDef name="id" type="STRING"/>
			</shadowColumns>
		</properties>
		<visual-constraints bounds="48,120,-1,-1" layout="vertical"/>
	</step>
	<connection className="com.ataccama.dqc.model.elements.connections.StandardFlowConnection" disabled="false">
		<source step="addresses" endpoint="out"/>
		<target step="Column Assigner" endpoint="in"/>
		<visual-constraints>
			<bendpoints/>
		</visual-constraints>
	</connection>



<modelComment bounds="216,144,228,134" borderColor="255,255,255" backgroundColor="219,219,219" foregroundColor="64,0,64">To see what the function does,
go to its edit dialogue and
hover over it.

Other examples of functions 
in Column Assigner can be seen
in tutorials 00.01 and 11.01.</modelComment>



<modelComment bounds="48,336,427,70" borderColor="255,255,255" backgroundColor="219,219,219" foregroundColor="64,0,64">Notice scoring in Column Assigner. Scoring is used only when the 
value is changed by the assignment. When the original and final values
are the same, no scoring is used.</modelComment>



<modelComment bounds="24,24,433,73" borderColor="255,255,255" backgroundColor="128,255,128" foregroundColor="40,0,0">Plan Goals
The goal of this plan is to use the Column Assigner step for transforming
the input data with functions and writing them as new columns to a new text file. </modelComment>

</purity-config>