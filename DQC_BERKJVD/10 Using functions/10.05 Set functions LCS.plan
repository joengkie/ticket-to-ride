<?xml version='1.0' encoding='UTF-8'?>
<purity-config version="10.6.2.ga-2017-03-03">
	<references/>
	<component-mappings>
		<propertyMappings/>
	</component-mappings>

<!-- (Intersection) --><step id="Intersection" className="com.ataccama.dqc.tasks.expressions.ColumnAssigner" disabled="false" mode="NORMAL">
		<properties>
			<assignments>
				<assignment expression="set.intersection(src_full_name_1, src_full_name_2)" column="intersection">
					<scorer>
						<scoringEntries>
							<scoringEntry score="0" explainAs="CA_CHANGED" explain="false" key="CA_CHANGED"/>
						</scoringEntries>
					</scorer>
				</assignment>
				<assignment expression="set.lcsIntersection(src_full_name_1, src_full_name_2)" column="lcs_intersection">
					<scorer>
						<scoringEntries>
							<scoringEntry score="0" explainAs="CA_CHANGED" explain="false" key="CA_CHANGED"/>
						</scoringEntries>
					</scorer>
				</assignment>
				<assignment column="lcs_intersection_exp">
					<expression>set.lcsIntersectionExp(src_full_name_1, src_full_name_2,
(x,y) {
   x = y
   or
     substr(x, 0, 1) = substr(y, 0, 1)
     and
     (
       length(x) = 1 and length(y) &gt; 1
       or 
       length(x) &gt; 1 and length(y) = 1
     )
})
</expression>
					<scorer>
						<scoringEntries>
							<scoringEntry score="0" explainAs="CA_CHANGED" explain="false" key="CA_CHANGED"/>
						</scoringEntries>
					</scorer>
				</assignment>
			</assignments>
		</properties>
		<visual-constraints bounds="48,168,-1,-1" layout="vertical"/>
	</step>
	<connection className="com.ataccama.dqc.model.elements.connections.StandardFlowConnection" disabled="false">
		<source step="Intersection" endpoint="out"/>
		<target step="Set functions LCS" endpoint="in"/>
		<visual-constraints>
			<bendpoints/>
		</visual-constraints>
	</connection>



<!-- (Set functions LCS) --><step id="Set functions LCS" className="com.ataccama.dqc.tasks.io.text.write.TextFileWriter" disabled="false" mode="NORMAL">
		<properties useStringQualifierOnAllColumns="false" stringQualifier="&quot;" lineSeparator="\r\n" fieldSeparator=";" generateMetadata="true" fileName="../data/out/10.05 Set_functions_LCS-intersection.csv" encoding="UTF-8" writeHeader="true" writeAllColumns="true" compression="NONE" stringQualifierEscape="&quot;">
			<columns/>
			<dataFormatParameters trueValue="true" falseValue="false" thousandsSeparator="" dateFormatLocale="en_US" dateTimeFormat="yyyy-MM-dd HH:mm:ss" decimalSeparator="." dayFormat="yyyy-MM-dd"/>
		</properties>
		<visual-constraints bounds="48,240,-1,-1" layout="vertical"/>
	</step>



<!-- (names_for_set_functions) --><step id="names_for_set_functions" className="com.ataccama.dqc.tasks.io.text.read.TextFileReader" disabled="false" mode="NORMAL">
		<properties stringQualifier="&quot;" lineSeparator="\r\n" fieldSeparator=";" lineMaxReadLength="65536" numberOfLinesInHeader="1" fileName="../data/in/names_for_set_functions.csv" encoding="UTF-8" numberOfLinesInFooter="0" compression="NONE" stringQualifierEscape="&quot;">
			<columns>
				<textReaderColumn name="src_first_name" type="STRING" ignore="true"/>
				<textReaderColumn name="src_last_name" type="STRING" ignore="true"/>
				<textReaderColumn name="src_name" type="STRING" ignore="true"/>
				<textReaderColumn name="src_name_2" type="STRING" ignore="true"/>
				<textReaderColumn name="src_full_name_1" type="STRING" ignore="false"/>
				<textReaderColumn name="src_full_name_2" type="STRING" ignore="false"/>
			</columns>
			<dataFormatParameters trueValue="true" falseValue="false" thousandsSeparator="" dateFormatLocale="en_US" dateTimeFormat="yy-MM-dd HH:mm:ss" decimalSeparator="." dayFormat="yy-MM-dd"/>
			<errorHandlingStrategy rejectFileName="rejected.txt">
				<errorInstructions>
					<errorInstruction putToLog="true" errorType="EXTRA_DATA" dataStrategy="READ_POSSIBLE" putToReject="false"/>
					<errorInstruction putToLog="true" errorType="LONG_LINE" dataStrategy="STOP" putToReject="true"/>
					<errorInstruction putToLog="true" errorType="PROCESSING_ERROR" dataStrategy="STOP" putToReject="false"/>
					<errorInstruction putToLog="true" errorType="INVALID_DATE" dataStrategy="READ_POSSIBLE" putToReject="false"/>
					<errorInstruction putToLog="true" errorType="SHORT_LINE" dataStrategy="READ_POSSIBLE" putToReject="true"/>
					<errorInstruction putToLog="true" errorType="UNPARSABLE_FIELD" dataStrategy="NULL_VALUE" putToReject="false"/>
				</errorInstructions>
			</errorHandlingStrategy>
			<shadowColumns>
				<shadowColumnDef name="intersection" type="INTEGER"/>
				<shadowColumnDef name="lcs_intersection" type="INTEGER"/>
				<shadowColumnDef name="lcs_intersection_exp" type="INTEGER"/>
			</shadowColumns>
		</properties>
		<visual-constraints bounds="48,96,-1,-1" layout="vertical"/>
	</step>
	<connection className="com.ataccama.dqc.model.elements.connections.StandardFlowConnection" disabled="false">
		<source step="names_for_set_functions" endpoint="out"/>
		<target step="Intersection" endpoint="in"/>
		<visual-constraints>
			<bendpoints/>
		</visual-constraints>
	</connection>



<modelComment bounds="24,24,553,49" borderColor="255,255,255" backgroundColor="128,255,128" foregroundColor="40,0,0">Plan Goals
The goal of this plan is to demonstrate LCS set functions. </modelComment>



<modelComment bounds="240,96,385,214" borderColor="255,255,255" backgroundColor="219,219,219" foregroundColor="64,0,64">LCS Set functions
- LCS = Longest Common Subset
    - follows the order of items in the two sets
    - int({1,5,8,9}, {5,1,8,9}) = {1, 8, 9} (one of options)
- Important for Business name matching
    - New York South Enterprise vs New Enterprise South York
    - symmetricDifference = 0, but probably different companies
    - and intersection = 4 and lcsIntersection = 2
- name obtained by adding prefix “lcs” to function name
    - set.lcsIntersection, set.lcsSymmetricDifference, ...
- LCS functions also have Exp variants...</modelComment>



<modelComment bounds="192,312,433,70" borderColor="255,255,255" backgroundColor="219,219,219" foregroundColor="64,0,64">set.lcsIntersection()
- compares the values of intersection and lcsIntersection on those names
- use lcsIntersectionExp to allow initials to match the complete names.</modelComment>

</purity-config>